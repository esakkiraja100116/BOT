{"is_source_file": true, "format": "Python", "description": "This file defines a Telegram bot that responds to commands and messages using the python-telegram-bot library. It includes command handlers for starting the bot and providing help, an echo function to repeat messages, and error logging.", "external_files": [], "external_methods": ["telegram.ext.Updater", "telegram.ext.CommandHandler", "telegram.ext.MessageHandler", "telegram.ext.Filters"], "published": [], "classes": [], "methods": [{"name": "start", "description": "Handles the /start command and sends a greeting message."}, {"name": "help", "description": "Handles the /help command and sends a help message."}, {"name": "echo", "description": "Repeats the message sent by the user."}, {"name": "error", "description": "Logs errors that occur during bot operation."}, {"name": "main", "description": "Initializes the bot, registers command handlers, and starts the webhook."}], "calls": ["updater.start_webhook", "updater.bot.setWebhook"], "search-terms": ["Telegram bot", "command handlers", "start command", "help command", "echo function"], "state": 2, "ctags": ["PORT: /^PORT = int(os.environ.get('PORT', 5000))$/;\"", "TOKEN: /^TOKEN = '1841603800:AAHnEPiQgp4z6gneNBF-V9YeKWuETA-3_WE'$/;\"", "echo: /^def echo(update, context):$/;\"", "error: /^def error(update, context):$/;\"", "help: /^def help(update, context):$/;\"", "level: /^                    level=logging.INFO)$/;\"", "logger: /^logger = logging.getLogger(__name__)$/;\"", "main: /^def main():$/;\"", "start: /^def start(update, context):$/;\""], "filename": "/home/raja/kavia-ai/graphnode-backend-api/data/T0005/20641/esakkiraja100116/BOT/bot.py", "hash": "4e064f7e74f252b5c69e7301d5f511e3", "format-version": 3, "code-base-name": "b1642qg"}